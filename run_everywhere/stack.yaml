# In this example a simple python webserver that
# serves it's working directory is launched by
# the random scheduler. At runtime, the controller
# ensures that at least N instances are running
# on EACH host in the resource pool.
#
# Many  of the options in the config section are
# no needed to make this application to work. They
# are present only to provide examples of what is
# possible.
containers:
  app:
    # The availability can be one of:
    #   per-pool - The scheduler runs N instances of container in each pool.
    #   per-host - This scheduler runs N instances of container on each host
    #              the application it is deployed to.
    availability: per-host
    scheduler: random
    instances:
      min: 1
      max: 5
      default: 3
    config:
      hostname: localhost
      user: root
      memory: 1G
      memory_swap: 4G
      # Ports is list of ports exposed by the container type
      ports:
      - protocol: tcp
        container_port: :8080
      tty: true
      env:
        DEBUG: "*"
      image: dgarcia/test-ws:latest
      volumes:
      - host_volume: /etc/ssl/certs
        container_volume: /etc/ssl/certs
        read_only: true
      working_dir: /
      labels:
        label: value
    host_config:
      privileged: true
      # see http://man7.org/linux/man-pages/man7/capabilities.7.html
      cap_add:
      - NET_ADMIN
      # see http://man7.org/linux/man-pages/man7/capabilities.7.html
      cap_drop:
      - CHOWN
      - MKNOD
