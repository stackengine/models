# In this example a simple python webserver that
# serves it's working directory is launched by
# the random scheduler. At runtime, the controller
# ensures that at least N instances are running
# on EACH host in the resource pool.
#
# Many  of the options in the Config section are
# no needed to make this application to work. They
# are present only to provide examples of what is
# possible.
Containers:
  app:
    # The scheduler can be one of:
    #   random   - This scheduler picks a host at random to schedule each
    #              desired instance. This is the default scheduler.
    #   per-host - This scheduler runs N instances of container on each host
    #              the application it is deployed to.
    Scheduler: per-host
    Instances:
      Min: 1
      Max: 5
      Default: 3
    Config:
      Hostname: localhost
      User: root
      Memory: 1G
      MemorySwap: 4G
      # Ports is list of ports exposed by the container type
      Ports:
      - Protocol: tcp
        ContainerPort: :8080
      Tty: true
      Env:
        DEBUG: "*"
      Image: dgarcia/test-ws:latest
      Volumes:
      - HostPath: /etc/ssl/certs
        ContainerPath: /etc/ssl/certs
        ReadOnly: true
      WorkingDir: /
      Labels:
        label: value
      Privileged: true
      # see http://man7.org/linux/man-pages/man7/capabilities.7.html
      CapAdd:
      - NET_ADMIN
      # see http://man7.org/linux/man-pages/man7/capabilities.7.html
      CapDrop:
      - CHOWN
      - MKNOD
